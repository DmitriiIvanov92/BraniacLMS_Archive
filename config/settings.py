"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-nx91ma)37@+wfm#i(ei%_e4hr6-ly!01ahyouia&gh+%15g2yp"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # добавили новое приложение для разметки markdownify
    "markdownify.apps.MarkdownifyConfig",
    # Регистрация через социальную сеть
    # pip install social-auth-app-django
    # прописываем новое приложение
    "social_django",
    # Прописали новое приложение mainapp
    "mainapp",
    # Приложение для авторизации:
    "authapp",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            "templates",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.template.context_processors.media",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # Контекстный процессор для social_django: backends and login_redirect
                "social_django.context_processors.backends",
                "social_django.context_processors.login_redirect",
                # Контекстный процессор: можно через него передавать инфу в шаблоны
                "mainapp.context_processors.example.simple_context_processor",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Django использовать наш новый пользовательский модель пользователя вместо встроенной модели User:
AUTH_USER_MODEL = "authapp.CustomUser"

# Авторизация для BACKEND - в данному случае OAuth2 для GITHUB:
AUTHENTICATION_BACKENDS = (
    "social_core.backends.github.GithubOAuth2",
    "django.contrib.auth.backends.ModelBackend",
)


SOCIAL_AUTH_GITHUB_KEY = "d28a5ad6012a87aead05"
SOCIAL_AUTH_GITHUB_SECRET = "a5ee360b83c5e5d1485be70b51352ff1bee8bd6d"

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Добавили путь до папки "static":
STATICFILES_DIRS = [
    BASE_DIR / "static",
]


# Media files добавили путь до медиа файлов
MEDIA_URL = "/media/"

MEDIA_ROOT = BASE_DIR / "media"

# Переадресация при успешном входе и выходе в лк:
LOGIN_REDIRECT_URL = "mainapp:main_page"
LOGOUT_REDIRECT_URL = "mainapp:main_page"


# Хранит информацию сообщения в рамках одной сессии (вход-выход, до перезагрузки):
# Можно так же указать куки: 'django.contrib.messages.storage.session.CookieStorage'
MESSAGE_STORAGE = "django.contrib.messages.storage.session.SessionStorage"
